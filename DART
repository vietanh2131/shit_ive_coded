#include <bits/stdc++.h>
using namespace std;

int main(){

    int n,m = 0;
    cin >> n;
    vector <pair<int,int> > g[3][51];
    int tmp = 0;
    while (cin >> tmp){
        int u = tmp,v,w1,w2,t; char l;
        cin >> v >> w1 >> w2 >> l;
        if (l == 'M'){
            t = 1;
        }
        else {
            t = 2;
        }
        // Ngu lam = 1;
        // Canh ve = 2;
        g[t][u].push_back({v,w1});
        g[3-t][v].push_back({u,w2});
    }
    int dist[3][51];
    priority_queue < pair<int, pair<int,int> > >q;
    memset(dist,60000001,sizeof(dist));
    q.push({0,{n,1}});
    q.push({0,{n,2}});
    while (!q.empty()){
        int d = -q.top().first, u = q.top().second.first, t = q.top().second.second;
        q.pop();
        if (d >= dist[t][u]) continue;
        //cout << d << " " << u << " " << t << endl;
        dist[t][u] = d;
        for (pair<int,int> v : g[t][u]){
            if (d + v.second < dist[3-t][v.first]){
                q.push({-(d + v.second), {v.first,3-t}});
            }
        }
    }
    cout << min(dist[1][1],dist[2][1]);
}

/*

For testing:

5
1 2 3 3 M
1 4 4 4 G
1 3 2 2 G
2 5 3 3 G
2 4 10 10 G
5 4 1 1 G
4 3 1 1 M


*/
